<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PiSweeper.Views"
        xmlns:mv="clr-namespace:PiSweeper.ViewModels"
        Width="600" Height="450"
        MinWidth="{Binding MinWindowWidth}" 
        MinHeight="{Binding MinWindowHeight}"
        mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="450"
        x:Class="PiSweeper.Views.MainWindow"
        x:DataType="mv:MainWindowViewModel"
        Title="PiSweeper">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.Styles>
            <Style Selector="Grid">
                <Setter Property="Margin" Value="5" />
            </Style>
        </Grid.Styles>
        
        <Menu Grid.Row="0">
            <MenuItem Header="Spiel">
                <MenuItem Header="Neues Spiel" Command="{Binding StartNewGameCommand}" />
                <MenuItem Header="Spielfeldgröße">
                    <MenuItem Header="Klein" Command="{Binding SetGameFieldSizeCommand}" CommandParameter="S" />
                    <MenuItem Header="Mittel" Command="{Binding SetGameFieldSizeCommand}" CommandParameter="M" />
                    <MenuItem Header="Groß" Command="{Binding SetGameFieldSizeCommand}" CommandParameter="L" />
                    <MenuItem Header="Individuell" Command="{Binding SetGameFieldSizeCommand}" />
                </MenuItem>
            </MenuItem>
        </Menu>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.Styles>
                <Style Selector="Label">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="FontSize" Value="16" />
                </Style>
            </Grid.Styles>
            
            <Label Grid.Column="0" Content="{Binding Time}" />
            <Button Grid.Column="2" Content="Neues Spiel" Command="{Binding StartNewGameCommand}"></Button>
            <Label Grid.Column="4" Content="{Binding LeftTags}" />
        </Grid>
        
        <ItemsControl Grid.Row="2" ItemsSource="{Binding GameField}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding Width}" Rows="{Binding Height}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="mv:CellViewModel">
                    <Button Classes.revealed="{Binding IsRevealed}"
                            Classes.exploded="{Binding IsExploded}"
                            Classes.revealedAfterGameOver="{Binding IsRevealedDueToGameOver}"
                            Classes.wasCorrectlyFlagged="{Binding IsFlaggedCorrectly}"
                            Classes.wasIncorrectlyFlagged="{Binding IsFlaggedIncorrectly}"
                            VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            FontStretch="Expanded"
                            FontWeight="Bold"
                            FontSize="32"
                            ClickMode="Release"
                            PointerPressed="InputElement_OnPointerPressed"
                            Command="{Binding Path=ViewModel.ClickCellCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}"
                            CommandParameter="{Binding .}">
                        <Button.Foreground>
                            <MultiBinding Converter="{StaticResource CellToForegroundColorConverter}">
                                <Binding Path="Value" />
                                <Binding Path="IsFlagged" />
                            </MultiBinding>
                        </Button.Foreground>
                        <Button.Styles>
                            <Style Selector="Button">
                                <Setter Property="Background" Value="Gray" />
                            </Style>
                            <Style Selector="Button.revealed">
                                <Setter Property="Background" Value="LightGray" />
                            </Style>
                            <Style Selector="Button.exploded">
                                <Setter Property="Background" Value="OrangeRed" />
                            </Style>
                            <Style Selector="Button.revealedAfterGameOver">
                                <Setter Property="Background" Value="LightCyan" />
                            </Style>
                            <Style Selector="Button.wasCorrectlyFlagged">
                                <Setter Property="Background" Value="GreenYellow" />
                            </Style>
                            <Style Selector="Button.wasIncorrectlyFlagged">
                                <Setter Property="Background" Value="LightCoral" />
                            </Style>
                        </Button.Styles>
                        <Viewbox>
                            <TextBlock Text="{Binding Text}" FontWeight="Bold" FontStretch="Expanded" />
                        </Viewbox>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>